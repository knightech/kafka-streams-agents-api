import com.commercehub.gradle.plugin.avro.GenerateAvroJavaTask
plugins {
	id 'org.springframework.boot' version '2.1.2.RELEASE'
	id "com.commercehub.gradle.plugin.avro" version "0.17.0"
	id 'io.spring.dependency-management' version '1.0.4.RELEASE'
	id 'java'
}
apply plugin: "com.commercehub.gradle.plugin.avro-base"
apply plugin: 'io.spring.dependency-management'

group = 'net.knightech'
version = '1.0.0'
sourceCompatibility = '1.8'


ext {
	confluentVersion='5.2.1'
	kafkaVersion = '2.1.0'
	jettyVersion='9.4.18.v20190429'
	jerseyVersion='2.28'
	jacksonVersion='2.9.9'
	kafkaScalaVersion='2.12'
	scalaTestVersion='2.2.0-cp2'
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/snapshot' }
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://packages.confluent.io/maven' }
}

List kafka = ["org.apache.kafka:kafka-clients:${kafkaVersion}"
			  , "org.apache.kafka:kafka-streams:${kafkaVersion}"]

List avro = ["org.apache.avro:avro:1.9.0"
			 ,"io.confluent:kafka-streams-avro-serde:${confluentVersion}"
			 ,"io.confluent:kafka-avro-serializer:${confluentVersion}"]


List web = ["io.confluent:monitoring-interceptors:${confluentVersion}"
			, "org.eclipse.jetty:jetty-server:${jettyVersion}"
			, "org.eclipse.jetty:jetty-servlet:${jettyVersion}"
			, "org.glassfish.jersey.containers:jersey-container-servlet:${jerseyVersion}"
			, "org.glassfish.jersey.inject:jersey-hk2:${jerseyVersion}"
			, "org.glassfish.jersey.media:jersey-media-json-jackson:${jerseyVersion}"]

dependencies {
	compile kafka, avro, web
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	compile "org.springframework.boot:spring-boot-starter-actuator"
	compile "io.micrometer:micrometer-registry-prometheus"
	compileOnly 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
}

task generateAvro(type: GenerateAvroJavaTask) {
	source("src/main/resources/avro")
	outputDir = file("src/main/java")
}